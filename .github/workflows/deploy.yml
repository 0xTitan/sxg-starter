name: Deploy to Firebase

on:
  push:
    branches:
      - main # Run this workflow when pushing to the main branch. Change if needed.

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Check out the repository code
      - name: Check out code
        uses: actions/checkout@v2

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20" # Specify your required Node.js version

      # Step 3: Set up Go
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.18" # Specify the Go version you need

      # Step 4: Install the Signed Exchange Library
      - name: Install Signed Exchange Library
        run: go install github.com/WICG/webpackage/go/signedexchange/cmd/...@latest

      # Install dependencies
      - name: Install dependencies
        working-directory: ./functions
        run: npm install

      # Build the project
      #- name: Build project
      #  run: npm run build

      #gen certificate
      - name: Generate Certificate and SXG
        run: |
          # Load environment variables from .env if not already loaded
          if [ -z "${SITE_NAME}" ]; then
            if [ -f .env ]; then
              export $(grep -v '^#' .env | xargs)
            fi
          fi

          # Extract domain from SITE_NAME (e.g., https://example.com -> example.com)
          DOMAIN=$(echo $SITE_NAME | sed -E 's~https?://~~')

          echo "SITE_NAME: ${SITE_NAME}"
          echo "DOMAIN: ${DOMAIN}"

          openssl ecparam -out priv.key -name prime256v1 -genkey
          openssl req -new -sha256 -key priv.key -out cert.csr -subj "/CN=${SITE_NAME}/O=Test/C=US"
          openssl x509 -req -days 90 -in cert.csr -signkey priv.key -out cert.pem -extfile <(echo -e "1.3.6.1.4.1.11129.2.1.22 = ASN1:NULL\nsubjectAltName=DNS:${SITE_NAME}")
          $HOME/go/bin/gen-certurl -pem cert.pem -ocsp <(echo ocsp)> cert.cbor
          $HOME/go/bin/gen-signedexchange \
          -uri $DOMAIN/hello.html \
          -content ./functions/sxg/payload.html \
          -certificate cert.pem \
          -privateKey priv.key \
          -certUrl $DOMAIN/cert.cbor \
          -validityUrl $DOMAIN/resource.validity.msg \
          -o functions/sxg/$SITE_NAME.hello.sxg
          cp functions/sxg/$SITE_NAME.hello.sxg public
          cp cert.cbor public
          cp cert.pem public

      # Deploy to Firebase Hosting
      - name: Deploy to Firebase
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: |
          npm install -g firebase-tools
          firebase deploy
